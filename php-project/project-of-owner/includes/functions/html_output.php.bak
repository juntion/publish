<?php
 function zen_href_link($page = '', $parameters = '', $connection = 'NONSSL', $add_session_id = true, $search_engine_safe = true, $static = false, $use_dir_ws_catalog = true) {
		
		/* QUICK AND DIRTY WAY TO DISABLE REDIRECTS ON PAGES WHEN SEO_URLS_ONLY_IN is enabled IMAGINADW.COM */
		$sefu = explode(",", ereg_replace( ' +', '', SEO_URLS_ONLY_IN ));
		if((SEO_URLS_ONLY_IN!="") && !in_array($page,$sefu)) {
			return original_zen_href_link($page, $parameters, $connection, $add_session_id, $search_engine_safe, $static, $use_dir_ws_catalog);
		}
		
		if (!isset($GLOBALS['seo_urls']) && !is_object($GLOBALS['seo_urls'])) {
			include_once(DIR_WS_CLASSES . 'seo.url.php');

			$GLOBALS['seo_urls'] = new SEO_URL($_SESSION['languages_id']);
		}

		return $GLOBALS['seo_urls']->href_link($page, $parameters, $connection, $add_session_id, $static, $use_dir_ws_catalog);
  }
 
/*
 * The HTML href link wrapper function
 */
  function original_zen_href_link($page = '', $parameters = '', $connection = 'NONSSL', $add_session_id = true, $search_engine_safe = true, $static = false, $use_dir_ws_catalog = true) {
    global $request_type, $session_started, $http_domain, $https_domain;

    if (!zen_not_null($page)) {
      die('</td></tr></table></td></tr></table><br /><br /><strong class="note">Error!<br /><br />Unable to determine the page link!</strong><br /><br /><!--' . $page . '<br />' . $parameters . ' -->');
    }

    if ($connection == 'NONSSL') {
      //$link = HTTP_SERVER;
	   $link = HTTPS_SERVER;
    } elseif ($connection == 'SSL') {
      if (ENABLE_SSL == 'true') {
        $link = HTTPS_SERVER ;
      } else {
        //$link = HTTP_SERVER;
		$link = HTTPS_SERVER;
      }
    } else {
      die('</td></tr></table></td></tr></table><br /><br /><strong class="note">Error!<br /><br />Unable to determine connection method on a link!<br /><br />Known methods: NONSSL SSL</strong><br /><br />');
    }

    if ($use_dir_ws_catalog) {
      if ($connection == 'SSL' && ENABLE_SSL == 'true') {
        $link .= DIR_WS_HTTPS_CATALOG;
      } else {
        $link .= DIR_WS_CATALOG;
      }
    }

    if (!$static) {
      if (zen_not_null($parameters)) {
        $link .= 'index.php?main_page='. $page . "&" . zen_output_string($parameters);
      } else {
        $link .= 'index.php?main_page=' . $page;
      }
    } else {
      if (zen_not_null($parameters)) {
        $link .= $page . "?" . zen_output_string($parameters);
      } else {
        $link .= $page;
      }
    }

    $separator = '&';

    while ( (substr($link, -1) == '&') || (substr($link, -1) == '?') ) $link = substr($link, 0, -1);
// Add the session ID when moving from different HTTP and HTTPS servers, or when SID is defined
    if ( ($add_session_id == true) && ($session_started == true) && (SESSION_FORCE_COOKIE_USE == 'False') ) {
      if (defined('SID') && zen_not_null(SID)) {
        $sid = SID;
//      } elseif ( ( ($request_type == 'NONSSL') && ($connection == 'SSL') && (ENABLE_SSL_ADMIN == 'true') ) || ( ($request_type == 'SSL') && ($connection == 'NONSSL') ) ) {
      } elseif ( ( ($request_type == 'NONSSL') && ($connection == 'SSL') && (ENABLE_SSL == 'true') ) || ( ($request_type == 'SSL') && ($connection == 'NONSSL') ) ) {
        if ($http_domain != $https_domain) {
          $sid = zen_session_name() . '=' . zen_session_id();
        }
      }
    }

// clean up the link before processing
    while (strstr($link, '&&')) $link = str_replace('&&', '&', $link);
    while (strstr($link, '&amp;&amp;')) $link = str_replace('&amp;&amp;', '&amp;', $link);

    if ( (SEARCH_ENGINE_FRIENDLY_URLS == 'true') && ($search_engine_safe == true) ) {
      while (strstr($link, '&&')) $link = str_replace('&&', '&', $link);

      $link = str_replace('&amp;', '/', $link);
      $link = str_replace('?', '/', $link);
      $link = str_replace('&', '/', $link);
      $link = str_replace('=', '/', $link);

      $separator = '?';
    }

    if (isset($sid)) {
      $link .= $separator . zen_output_string($sid);
    }

// clean up the link after processing
    while (strstr($link, '&amp;&amp;')) $link = str_replace('&amp;&amp;', '&amp;', $link);

    $link = preg_replace('/&/', '&amp;', $link);
    return $link;
  }


/*
 * The HTML image wrapper function for non-proportional images
 * used when "proportional images" is turned off or if calling from a template directory
 */
  function zen_image_OLD($src, $alt = '', $width = '', $height = '', $parameters = '') {
    global $template_dir;

//auto replace with defined missing image
    if ($src == DIR_WS_IMAGES and PRODUCTS_IMAGE_NO_IMAGE_STATUS == '1') {
      $src = DIR_WS_IMAGES . PRODUCTS_IMAGE_NO_IMAGE;
    }

    if ( (empty($src) || ($src == DIR_WS_IMAGES)) && (IMAGE_REQUIRED == 'false') ) {
      return false;
    }

    // if not in current template switch to template_default
    if (!file_exists($src)) {
      $src = str_replace(DIR_WS_TEMPLATES . $template_dir, DIR_WS_TEMPLATES . 'template_default', $src);
    }

// alt is added to the img tag even if it is null to prevent browsers from outputting
// the image filename as default
    $image = '<img src="' . zen_output_string($src) . '" alt="' . zen_output_string($alt) . '"';

    if (zen_not_null($alt)) {
      $image .= ' title=" ' . zen_output_string($alt) . ' "';
    }

    if ( (CONFIG_CALCULATE_IMAGE_SIZE == 'true') && (empty($width) || empty($height)) ) {
      if ($image_size = @getimagesize($src)) {
        if (empty($width) && zen_not_null($height)) {
          $ratio = $height / $image_size[1];
          $width = $image_size[0] * $ratio;
        } elseif (zen_not_null($width) && empty($height)) {
          $ratio = $width / $image_size[0];
          $height = $image_size[1] * $ratio;
        } elseif (empty($width) && empty($height)) {
          $width = $image_size[0];
          $height = $image_size[1];
        }
      } elseif (IMAGE_REQUIRED == 'false') {
        return false;
      }
    }

    if (zen_not_null($width) && zen_not_null($height)) {
      $image .= ' width="' . zen_output_string($width) . '" height="' . zen_output_string($height) . '"';
    }

    if (zen_not_null($parameters)) $image .= ' ' . $parameters;

    $image .= ' />';

    return $image;
  }


  
/*
 * The HTML image wrapper function
 */
  function zen_image($src, $alt = '', $width = '', $height = '', $parameters = '') {
    global $template_dir;

    // soft clean the alt tag
    $alt = zen_clean_html($alt);

    // use old method on template images
    if (strstr($src, 'includes/templates') or strstr($src, 'includes/languages') or PROPORTIONAL_IMAGES_STATUS == '0') {
      return zen_image_OLD($src, $alt, $width, $height, $parameters);
    }

//auto replace with defined missing image
    if ($src == DIR_WS_IMAGES and PRODUCTS_IMAGE_NO_IMAGE_STATUS == '1') {
      $src = DIR_WS_IMAGES . PRODUCTS_IMAGE_NO_IMAGE;
    }

    if ( (empty($src) || ($src == DIR_WS_IMAGES)) && (IMAGE_REQUIRED == 'false') ) {
      return false;
    }

    // if not in current template switch to template_default
    if (!file_exists($src)) {
      $src = str_replace(DIR_WS_TEMPLATES . $template_dir, DIR_WS_TEMPLATES . 'template_default', $src);
    }

    // hook for handle_image() function such as Image Handler etc
    if (function_exists('handle_image')) {
      $newimg = handle_image($src, $alt, $width, $height, $parameters);
      list($src, $alt, $width, $height, $parameters) = $newimg;
    }

    // Convert width/height to int for proper validation.
    // intval() used to support compatibility with plugins like image-handler
    $width = empty($width) ? $width : intval($width);
    $height = empty($height) ? $height : intval($height);

// alt is added to the img tag even if it is null to prevent browsers from outputting
// the image filename as default
    $image = '<img src="' . HTTPS_IMAGE_SERVER . zen_output_string($src) . '" alt="' . zen_output_string($alt) . '"';

    if (zen_not_null($alt)) {
      $image .= ' title=" ' . zen_output_string($alt) . ' "';
    }

    if ( ((CONFIG_CALCULATE_IMAGE_SIZE == 'true') && (empty($width) || empty($height))) ) {
      if ($image_size = @getimagesize($src)) {
        if (empty($width) && zen_not_null($height)) {
          $ratio = $height / $image_size[1];
          $width = $image_size[0] * $ratio;
        } elseif (zen_not_null($width) && empty($height)) {
          $ratio = $width / $image_size[0];
          $height = $image_size[1] * $ratio;
        } elseif (empty($width) && empty($height)) {
          $width = $image_size[0];
          $height = $image_size[1];
        }
      } elseif (IMAGE_REQUIRED == 'false') {
        return false;
      }
    }


    if (zen_not_null($width) && zen_not_null($height) and file_exists($src)) {
//      $image .= ' width="' . zen_output_string($width) . '" height="' . zen_output_string($height) . '"';
// proportional images
      $image_size = @getimagesize($src);
      // fix division by zero error
      $ratio = ($image_size[0] != 0 ? $width / $image_size[0] : 1);
      if ($image_size[1]*$ratio > $height) {
        $ratio = $height / $image_size[1];
        $width = $image_size[0] * $ratio;
      } else {
        $height = $image_size[1] * $ratio;
      }
// only use proportional image when image is larger than proportional size
      if ($image_size[0] < $width and $image_size[1] < $height) {
        $image .= ' width="' . $image_size[0] . '" height="' . intval($image_size[1]) . '"';
      } else {
        $image .= ' width="' . round($width) . '" height="' . round($height) . '"';
      }
    } else {
       // override on missing image to allow for proportional and required/not required
      if (IMAGE_REQUIRED == 'false') {
        return false;
      } else {
        $image .= ' width="' . intval(SMALL_IMAGE_WIDTH) . '" height="' . intval(SMALL_IMAGE_HEIGHT) . '"';
      }
    }

    // inject rollover class if one is defined. NOTE: This could end up with 2 "class" elements if $parameters contains "class" already.
    if (defined('IMAGE_ROLLOVER_CLASS') && IMAGE_ROLLOVER_CLASS != '') {
    	$parameters .= (zen_not_null($parameters) ? ' ' : '') . 'class="rollover"';
    }
    // add $parameters to the tag output
    if (zen_not_null($parameters)) $image .= ' ' . $parameters;

    $image .= ' />';

    // $c = 'https://cdn.fs.com/';
    // $i = "imgCache/";
    // $image = str_replace($i,$c,$image);

    return $image;
  }

/*
 * The HTML form submit button wrapper function
 * Outputs a "submit" button in the selected language
 */
  function zen_image_submit($image, $alt = '', $parameters = '', $sec_class = '') {
    global $template, $current_page_base, $zco_notifier;
    if (strtolower(IMAGE_USE_CSS_BUTTONS) == 'yes' && strlen($alt)<30) return zenCssButton($image, $alt, 'submit', $sec_class /*, $parameters = ''*/ );
    $zco_notifier->notify('PAGE_OUTPUT_IMAGE_SUBMIT');

    $image_submit = '<input type="image" src="' . zen_output_string($template->get_template_dir($image, DIR_WS_TEMPLATE, $current_page_base, 'buttons/' . $_SESSION['language'] . '/') . $image) . '" alt="' . zen_output_string($alt) . '"';

    if (zen_not_null($alt)) $image_submit .= ' title=" ' . zen_output_string($alt) . ' "';

    if (zen_not_null($parameters)) $image_submit .= ' ' . $parameters;

    $image_submit .= ' />';

    return $image_submit;
  }

/*
 * Output a function button in the selected language
 */
  function zen_image_button($image, $alt = '', $parameters = '', $sec_class = '') {
    global $template, $current_page_base, $zco_notifier;

    // inject rollover class if one is defined. NOTE: This could end up with 2 "class" elements if $parameters contains "class" already.
    if (defined('IMAGE_ROLLOVER_CLASS') && IMAGE_ROLLOVER_CLASS != '') {
    	$parameters .= (zen_not_null($parameters) ? ' ' : '') . 'class="rollover"';
    }

    $zco_notifier->notify('PAGE_OUTPUT_IMAGE_BUTTON');
    if (strtolower(IMAGE_USE_CSS_BUTTONS) == 'yes') return zenCssButton($image, $alt, 'button', $sec_class, $parameters = '');
    return zen_image($template->get_template_dir($image, DIR_WS_TEMPLATE, $current_page_base, 'buttons/' . $_SESSION['language'] . '/') . $image, $alt, '', '', $parameters);
  }


/**
 * generate CSS buttons in the current language
 * concept from contributions by Seb Rouleau and paulm, subsequently adapted to Zen Cart
 * note: any hard-coded buttons will not be able to use this function
**/
  function zenCssButton($image = '', $text, $type, $sec_class = '', $parameters = '') {

    // automatic width setting depending on the number of characters
    $min_width = 80; // this is the minimum button width, change the value as you like
    $character_width = 6.5; // change this value depending on font size!
    // end settings
    // added html_entity_decode function to prevent html special chars to be counted as multiple characters (like &amp;)
    $width = strlen(html_entity_decode($text)) * $character_width;
    $width = (int)$width;
    if ($width < $min_width) $width = $min_width;
    $style = ' style="width: ' . $width . 'px;"';
    // if no secondary class is set use the image name for the sec_class
    if (empty($sec_class)) $sec_class = basename($image, '.gif');
    if(!empty($sec_class))$sec_class = ' ' . $sec_class;
    if(!empty($parameters))$parameters = ' ' . $parameters;
    $mouse_out_class  = 'cssButton' . $sec_class;
    $mouse_over_class = 'cssButtonHover' . $sec_class . $sec_class . 'Hover';
    // javascript to set different classes on mouseover and mouseout: enables hover effect on the buttons
    // (pure css hovers on non link elements do work work in every browser)
    $css_button_js .=  'onmouseover="this.className=\''. $mouse_over_class . '\'" onmouseout="this.className=\'' . $mouse_out_class . '\'"';

    if ($type == 'submit'){
// form input button
   $css_button = '<input class="' . $mouse_out_class . '" ' . $css_button_js . ' type="submit" value="' .$text . '"' . $parameters . $style . ' />';
    }

    if ($type=='button'){
// link button
   $css_button = '<span class="' . $mouse_out_class . '" ' . $css_button_js . $style . ' >&nbsp;' . $text . '&nbsp;</span>'; // add $parameters ???
    }
    return $css_button;
  }


/*
 *  Output a separator either through whitespace, or with an image
 */
  function zen_draw_separator($image = 'true', $width = '100%', $height = '1') {

    // set default to use from template - zen_image will translate if not found in current template
    if ($image == 'true') {
      $image = DIR_WS_TEMPLATE_IMAGES . OTHER_IMAGE_BLACK_SEPARATOR;
    } else {
      if (!strstr($image, DIR_WS_TEMPLATE_IMAGES)) {
        $image = DIR_WS_TEMPLATE_IMAGES . $image;
      }
    }
    return zen_image($image, '', $width, $height);
  }

/*
 *  Output a form
 */
  function zen_draw_form($name, $action, $method = 'post', $parameters = '') {
    $form = '<form name="' . zen_output_string($name) . '" action="' . zen_output_string($action) . '" method="' . zen_output_string($method) . '"';

    if (zen_not_null($parameters)) $form .= ' ' . $parameters;

    $form .= '>';

    return $form;
  }

/*
 *  Output a form input field
 */
  function zen_draw_input_field($name, $value = '', $parameters = '', $type = 'text', $reinsert_value = true) {
    $field = '<input type="' . zen_output_string($type) . '" name="' . zen_sanitize_string(zen_output_string($name)) . '"';
    if ( (isset($GLOBALS[$name]) && is_string($GLOBALS[$name])) && ($reinsert_value == true) ) {
      $field .= ' value="' . zen_output_string(stripslashes($GLOBALS[$name])) . '"';
    } elseif (zen_not_null($value)) {
      $field .= ' value="' . zen_output_string($value) . '"';
    }

    if (zen_not_null($parameters)) $field .= ' ' . $parameters;

    $field .= ' />';

    return $field;
  }

/*
 *  Output a form password field
 */
  function zen_draw_password_field($name, $value = '', $parameters = 'maxlength="40"') {
    return zen_draw_input_field($name, $value, $parameters, 'password', true);
  }

/*
 *  Output a selection field - alias function for zen_draw_checkbox_field() and zen_draw_radio_field()
 */
  function zen_draw_selection_field($name, $type, $value = '', $checked = false, $parameters = '') {
    $selection = '<input type="' . zen_output_string($type) . '" name="' . zen_output_string($name) . '"';

    if (zen_not_null($value)) $selection .= ' value="' . zen_output_string($value) . '"';

    if ( ($checked == true) || ( isset($GLOBALS[$name]) && is_string($GLOBALS[$name]) && ( ($GLOBALS[$name] == 'on') || (isset($value) && (stripslashes($GLOBALS[$name]) == $value)) ) ) ) {
      $selection .= ' checked="checked"';
    }

    if (zen_not_null($parameters)) $selection .= ' ' . $parameters;

    $selection .= ' />';

    return $selection;
  }

/*
 *  Output a form checkbox field
 */
  function zen_draw_checkbox_field($name, $value = '', $checked = false, $parameters = '') {
    return zen_draw_selection_field($name, 'checkbox', $value, $checked, $parameters);
  }

/*
 * Output a form radio field
 */
  function zen_draw_radio_field($name, $value = '', $checked = false, $parameters = '') {
    return zen_draw_selection_field($name, 'radio', $value, $checked, $parameters);
  }

/*
 *  Output a form textarea field
 */
  function zen_draw_textarea_field($name, $width, $height, $text = '~*~*#', $parameters = '', $reinsert_value = true) {
    $field = '<textarea name="' . zen_output_string($name) . '" cols="' . zen_output_string($width) . '" rows="' . zen_output_string($height) . '"';

    if (zen_not_null($parameters)) $field .= ' ' . $parameters;

    $field .= '>';

    if ($text == '~*~*#' && (isset($GLOBALS[$name]) && is_string($GLOBALS[$name])) && ($reinsert_value == true) ) {
      $field .= stripslashes($GLOBALS[$name]);
    } elseif ($text != '~*~*#' && zen_not_null($text)) {
      $field .= $text;
    }

    $field .= '</textarea>';

    return $field;
  }

/*
 *  Output a form hidden field
 */
  function zen_draw_hidden_field($name, $value = '', $parameters = '') {
    $field = '<input type="hidden" name="' . zen_sanitize_string(zen_output_string($name)) . '"';

    if (zen_not_null($value)) {
      $field .= ' value="' . zen_output_string($value) . '"';
    } elseif (isset($GLOBALS[$name]) && is_string($GLOBALS[$name])) {
      $field .= ' value="' . zen_output_string(stripslashes($GLOBALS[$name])) . '"';
    }

    if (zen_not_null($parameters)) $field .= ' ' . $parameters;

    $field .= ' />';

    return $field;
  }

/*
 * Output a form file-field
 */
  function zen_draw_file_field($name, $required = false) {
    $field = zen_draw_input_field($name, '', ' size="50" ', 'file');

    return $field;
  }


/*
 *  Hide form elements while including session id info
 *  IMPORTANT: This should be used in every FORM that has an OnSubmit() function tied to it, to prevent unexpected logouts
 */
  function zen_hide_session_id() {
    global $session_started;

    if ( ($session_started == true) && defined('SID') && zen_not_null(SID) ) {
      return zen_draw_hidden_field(zen_session_name(), zen_session_id());
    }
  }

/*
 *  Output a form pull down menu
 *  Pulls values from a passed array, with the indicated option pre-selected
 */
  function zen_draw_pull_down_menu($name, $values, $default = '', $parameters = '', $required = false) {
    $field = '<select class="login_country" name="' . zen_output_string($name) . '"';

    if (zen_not_null($parameters)) $field .= ' ' . $parameters;

    $field .= '>' . "\n";

    if (empty($default) && isset($GLOBALS[$name]) && is_string($GLOBALS[$name]) ) $default = stripslashes($GLOBALS[$name]);

    for ($i=0, $n=sizeof($values); $i<$n; $i++) {
       //echo "<style=\"display:none\">".$values[$i]['id']."</div>";
      //if (0 != $values[$i]['id']){
      	  $field .= '  <option value="' . zen_output_string($values[$i]['id']) . '"';
	      if ($default == $values[$i]['id']) {
	        $field .= ' selected="selected"';
	      }

      	  $field .= '>' . zen_output_string($values[$i]['text'], array('"' => '&quot;', '\'' => '&#039;', '<' => '&lt;', '>' => '&gt;')) . '</option>' . "\n";
      //}
    }
    $field .= '</select>' . "\n";

    if ($required == true) $field .= TEXT_FIELD_REQUIRED;

    return $field;
  }
    function zen_draw_pull_down_menu_optic_network($name, $values, $default = '', $parameters = '', $required = false,$options_id,$products_options_name){
	if($result = Channels_Port_option_value_id($options_id,$products_options_name)){
		$html = "<input type='hidden' name='channels_port_option_count' id='channels_port_option_count' value= '".count($result)."'>";
	}
    $field = '<select class="login_country" name="' . zen_output_string($name) . '"';

    if (zen_not_null($parameters)) $field .= ' ' . $parameters;

    $field .= '>' . "\n";

    if (empty($default) && isset($GLOBALS[$name]) && is_string($GLOBALS[$name]) ) $default = stripslashes($GLOBALS[$name]);
    for ($i=0, $n=sizeof($values); $i<$n; $i++) {
      $field .= '  <option value="' . zen_output_string($values[$i]['id']) . '"';
      if ($default == $values[$i]['id']) {
        $field .= ' selected="selected"';
      }
	   //if(stripos($values[$i]['text'],'+')){
		   //$values[$i]['text'] = substr($values[$i]['text'],0,-1)."/km)";
	   //}
      $field .= '>' . zen_output_string($values[$i]['text'], array('"' => '&quot;', '\'' => '&#039;', '<' => '&lt;', '>' => '&gt;')) . '</option>' . "\n";
    }
    $field .= '</select>' . "\n";

	if($html){
		$field .= $html;
	}

    if ($required == true) $field .= TEXT_FIELD_REQUIRED;

    return $field;
  }
  function zen_draw_pull_down_menu_outer_jacket($name, $values, $default = '', $parameters = '', $required = false,$options_id,$products_options_name) {
    $field = '<select class="login_country" name="' . zen_output_string($name) . '"';

    if (zen_not_null($parameters)) $field .= ' ' . $parameters;

    $field .= '>' . "\n";

    if (empty($default) && isset($GLOBALS[$name]) && is_string($GLOBALS[$name]) ) $default = stripslashes($GLOBALS[$name]);
    for ($i=0, $n=sizeof($values); $i<$n; $i++) {
      $field .= '  <option value="' . zen_output_string($values[$i]['id']) . '"';
      if ($default == $values[$i]['id']) {
        $field .= ' selected="selected"';
      }
	   if(stripos($values[$i]['text'],'+')){
		   $values[$i]['text'] = substr($values[$i]['text'],0,-1)."/km)";
	   }
      $field .= '>' . zen_output_string($values[$i]['text'], array('"' => '&quot;', '\'' => '&#039;', '<' => '&lt;', '>' => '&gt;')) . '</option>' . "\n";
    }
    $field .= '</select>' . "\n";

    if ($required == true) $field .= TEXT_FIELD_REQUIRED;

    return $field;
  }
  function zen_draw_pull_down_menu_fiber_count($name, $values, $default = '', $parameters = '', $required = false,$options_id,$products_options_name){
	  $field = '<select onchange = "custom_select('.$_GET['products_id'].')" class="login_country" name="' . zen_output_string($name) . '"';

    if (zen_not_null($parameters)) $field .= ' ' . $parameters;

    $field .= '>' . "\n";

    if (empty($default) && isset($GLOBALS[$name]) && is_string($GLOBALS[$name]) ) $default = stripslashes($GLOBALS[$name]);

    for ($i=0, $n=sizeof($values); $i<$n; $i++) {
      $field .= '  <option value="' . zen_output_string($values[$i]['id']) . '"';
      if ($default == $values[$i]['id']) {
        $field .= ' selected="selected"';
      }

      $field .= '>' . zen_output_string($values[$i]['text'], array('"' => '&quot;', '\'' => '&#039;', '<' => '&lt;', '>' => '&gt;')) . '</option>' . "\n";
    }
    $field .= '</select>';
	$html = fiber_output_html($products_options_name);
	$field .=  $html;
	$field .= "\n";

    if ($required == true) $field .= TEXT_FIELD_REQUIRED;

    return $field;
  }

 function zen_draw_pull_down_menu_others($name, $values, $default = '', $parameters = '', $required = false,$options_id) {
 global $db;
 $list = $db->getAll("select products_options_name from products_options where products_options_id = '".$options_id."' and language_id =1");
 if($list){
 	$result = $db->getAll("select products_options_id from products_options where products_options_id <> '".$options_id."' and language_id =1 and products_options_name = '".$list[0]['products_options_name']."' and products_options_type = 1 limit 1");
 	if($result){
 		$products_options_id = $result[0]['products_options_id'];
 	}else{
 		$products_options_id = 0;
 	}
 }else{
 		$products_options_id = 0;
 }
 $products_options_name = $list[0]['products_options_name'];
 if(set_block_inline($products_options_name)){
	 $display = 'inline';
 }else{
	 $display = 'block';
 }
 $attribute_id = 'attribute-'.$products_options_id.'-0';
 $attrib_id   = 'attrib-'.$products_options_id.'-0';
 $brand_option_id = get_brand_option_ids();
 if (zen_not_null($parameters)){
		$select_id = str_replace('id=','',$parameters);
		$select_id = str_replace('"','',$select_id);
	}
	if($brand_option_id){
		if(zend_option_brand_set($products_options_name)){
			$brand_attribute_id = 'attribute-'.$brand_option_id[0]['products_options_id'].'-0';
			$brand_attrib_id = 'attrib-'.$brand_option_id[0]['products_options_id'].'-0';
		}else{
			$brand_attribute_id = 0;
			$brand_attrib_id = 0;
		}
	}else{
		$brand_attribute_id = 0;
		$brand_attrib_id = 0;
	}
		$field = '<select class="login_country" onchange="set_attribute_others(\''.$attribute_id.'\',\''.$select_id.'\',\''.$attrib_id.'\',\''.$brand_attribute_id.'\',\''.$brand_attrib_id.'\',\''.$display.'\')" name="' . zen_output_string($name) . '"';
	
  	if (zen_not_null($parameters)) $field .= ' ' . $parameters;
  
  	$field .= '>' . "\n";
  
  	if (empty($default) && isset($GLOBALS[$name]) && is_string($GLOBALS[$name]) ) $default = stripslashes($GLOBALS[$name]);
  
  	for ($i=0, $n=sizeof($values); $i<$n; $i++) {
  		$field .= '  <option value="' . zen_output_string($values[$i]['id']) . '"';
  		if ($default == $values[$i]['id']) {
  			$field .= ' selected="selected"';
  		}
  
  		$field .= '>' . zen_output_string($values[$i]['text'], array('"' => '&quot;', '\'' => '&#039;', '<' => '&lt;', '>' => '&gt;')) . '</option>' . "\n";
  	}
  	$field .= '</select>';
	
	if(option_name_detail($products_options_name)){
		//$field .= '<div class="question_text"><div class="question_bg"></div><div class="question_text_01 leftjt"><div class="arrow"></div><div class="popover-content">The price for HP compatible cable changes frequently, please kindly contact us at sales@fs.com before placing an order.</div></div></div>';
	}

	$field .= '<input type="hidden" name="select_option_id" id="select_option_id" value="'.$options_id.'"><input type="hidden" name="input_option_id" id="input_option_id" value="'.$products_options_id.'">';
	$field .= '<div class="ccc"></div>';
	$values_description = get_brand_option_values_description($options_id);
	if(get_brand_option_ids()){
	if(zend_option_brand_set($products_options_name)){
		$field .= '<p id="attribute-'.$brand_option_id[0]['products_options_id'].'-0" class="product_04_22" style="display:none"><input id="attrib-'.$brand_option_id[0]['products_options_id'].'-0" class="attr_input_2" type="text" value="" maxlength="16" size="16" name="id[text_prefix_'.$brand_option_id[0]['products_options_id'].']">';
		$field .= '&nbsp;&nbsp;('.$values_description.')';
		$field .='</p>';
	}
	}
  	if(pulling_eye_status($products_options_id)){
				$field .= '<p id="attribute-'.$products_options_id.'-0" style="display:none" class="product_04_22"><input id="attrib-'.$products_options_id.'-0" class="attr_input_2" type="text" value="Fill in the number." maxlength="19" size="19" name="id[text_prefix_'.$products_options_id.']" onblur="pulling_eye_fun(this.value)" onfocus = "javascript:this.value=\'\';this.style.color=\'#000000\';" style="color:#cccccc;width:102px;	">';
				$field .=  '<span style="padding:0 0 0 0;">&nbsp;&nbsp;Piece&nbsp;&nbsp;</span>';
				//$field .= '<div class="question_text"><div class="question_bg"></div><div class="question_text_01 leftjt"><div class="arrow"></div><div class="popover-content">Fill in the number.</div></div></div>';

				$field .= "<span  style='padding:0 0 0 0;' id='pulling_eye_price' class ='pulling_eye_price'></span>";
		    }else{
				$field .= '<p id="attribute-'.$products_options_id.'-0" style="display:none" class="product_04_22"><input id="attrib-'.$products_options_id.'-0" class="attr_input_2" type="text" value="" maxlength="19" size="19" name="id[text_prefix_'.$products_options_id.']">';
			}
	if(option_name_detail($products_options_name)){
		$field .='&nbsp;&nbsp;(eg,Cisco Nexus 7000)';
	}
	$field .='</p>' . "\n";
  
  	if ($required == true) $field .= TEXT_FIELD_REQUIRED;
  	
  	return $field;
  }

/*
 * Creates a pull-down list of countries
 */
  function zen_get_country_list($name, $selected = '', $parameters = '') {
    $countriesAtTopOfList = array();
    $countries_array = array(array('id' => '', 'text' => PULL_DOWN_DEFAULT));
    $countries = zen_get_countries();

    // Set some default entries at top of list:
    if (STORE_COUNTRY != SHOW_CREATE_ACCOUNT_DEFAULT_COUNTRY) $countriesAtTopOfList[] = SHOW_CREATE_ACCOUNT_DEFAULT_COUNTRY;
    $countriesAtTopOfList[] = STORE_COUNTRY;
    // IF YOU WANT TO ADD MORE DEFAULTS TO THE TOP OF THIS LIST, SIMPLY ENTER THEIR NUMBERS HERE.
    // Duplicate more lines as needed
    // Example: Canada is 108, so use 108 as shown:
    //$countriesAtTopOfList[] = 108;

    //process array of top-of-list entries:
    foreach ($countriesAtTopOfList as $key=>$val) {
      $countries_array[] = array('id' => $val, 'text' => zen_get_country_name($val));
    }
    // now add anything not in the defaults list:
    for ($i=0, $n=sizeof($countries); $i<$n; $i++) {
      $alreadyInList = FALSE;
      foreach($countriesAtTopOfList as $key=>$val) {
        if ($countries[$i]['countries_id'] == $val)
        {
          // If you don't want to exclude entries already at the top of the list, comment out this next line:
          $alreadyInList = TRUE;
          continue;
        }
      }
      if (!$alreadyInList) $countries_array[] = array('id' => $countries[$i]['countries_id'], 'text' => $countries[$i]['countries_name']);
    }

    return zen_draw_pull_down_menu($name, $countries_array, $selected, $parameters);
  }
/*
 * Assesses suitability for additional parameters such as rel=nofollow etc
 */
  function zen_href_params($page = '', $parameters = '') {
    global $current_page_base;
    $addparms = '';
    // if nofollow has already been set, ignore this function
    if (stristr($parameters, 'nofollow')) return $parameters;
    // if list of skippable pages has been set in meta_tags.php lang file (is by default), use that to add rel=nofollow params
    if (defined('ROBOTS_PAGES_TO_SKIP') && in_array($page, explode(",", constant('ROBOTS_PAGES_TO_SKIP')))
        || $current_page_base=='down_for_maintenance') $addparms = 'rel="nofollow"';
    return ($parameters == '' ? $addparms : $parameters . ' ' . $addparms);
  }

  
  /**
   *
   * @param int $default_country_id
   * @param string $name html tag name
   * @param string $params html tag attributes
   * @return string $string countries list in  html select tag style
   * @todo get countries list
   */
  function zen_draw_countries_pull_down($name='',$params= '',$default_country_id = 223){
  
  
  	//default countries list
  	$default_countries = array(
  			223 => 'United States',
			222 => 'United Kingdom',
  			38	=> 'Canada',
  			13	=> 'Australia',	
  			73	=> 'France',
			81  => 'Germany',
			195 => 'Spain',
  			150	=> 'Netherlands',
			99	=> 'India',
			30 => 'Brazil',
  			204	=> 'Switzerland',
  			105 => 'Italy',
  			
  	);
  
  	$keys = array_keys($default_countries);
  	$string = '<select name="' . $name . '" ' . $params .">\n";
  
  	// 	group 1
  	$string .= '<optgroup label="Please select ...">'."\n";
  	foreach ($default_countries as $i => $country){
  		$string .= '<option class="flag '. zen_get_country_iso_code($i) .'"';
  		if ($default_country_id && $default_country_id == (int)$i){
  			$string .= ' selected="selected" ';
  		}
  		$string .= 'value="'.$i.'">&nbsp;<em class="flag '. zen_get_country_iso_code($i) .'"></em>'.$country.'</option>'."\n";
  	}
  	$string .= '</optgroup>'."\n";
  
  	//group 2
  	// 	iterate countries from db
  	$countiries = zen_get_countries();
  	$string .= '<optgroup label="--------------------------">'."\n";
  	foreach ($countiries as $i => $country){
  		if (!in_array($country['countries_id'],$keys)){
  			$string .= '<option  class="flag '. zen_get_country_iso_code($i) .'"';
  			if ($default_country_id && $default_country_id == $country['countries_id']){
  				$string .= ' selected="selected" ';
  			}
  			$string .= ' value="'.$country['countries_id'].'">&nbsp;<em class="flag '. zen_get_country_iso_code($i) .'"></em>'.$country['countries_name'].'</option>'."\n";
  		}
  	}
  	$string .= '</optgroup>'."\n";
  	$string .= '</select>';
  	return $string;
  }
  
  
  
  function zen_draw_countries_pull_down_add_tag($name='',$params= '',$default_country_id = 223){
  
  
  	//default countries list
  	$default_countries = array(
			223 => 'United States',
			222 => 'United Kingdom',
  			38	=> 'Canada',
  			13	=> 'Australia',	
  			73	=> 'France',
			81  => 'Germany',
			195 => 'Spain',
  			150	=> 'Netherlands',
			99	=> 'India',
			30 => 'Brazil',
  			204	=> 'Switzerland',
  			105 => 'Italy',
  	);
  
  	$keys = array_keys($default_countries);
  	$string = '
  	          <div ctr="{area:country}" id="curCountry" class="btn-group curCountry">
  	          <input type="hidden" name="country" id="country"/>
  	          <span class="big_input country_01" >
  	          <div id="your_currency" class="yourCurrency"><em class="flag us"></em>United States<span class="caret"></span></div></span>
  	          <ul class="dropdown-menu form-horizontal pull-right" id="box4" style="display:none;">
  	          <li>
  	          <ul>
  	          ';
  

  	foreach ($default_countries as $i => $country){
  		$string .= '<li class="">';

  		$string .= '<a href="javascript:void(0);" tag="'. $i .'" ctr="{\'change_to_country\':\''. zen_get_country_iso_code($i) .'\'}"><em class="flag '. zen_get_country_iso_code($i) .'"></em>'.$country.'</a></li>'."\n";
  	}
  	$string .= '<li class="divider"></li>';
  
  	//group 2
  	// 	iterate countries from db
  	$countiries = zen_get_countries();
  	//$string .= '<optgroup label="--------------------------">'."\n";
  	
  	foreach ($countiries as $i => $country){
  		if (!in_array($country['countries_id'],$keys)){
  			$string .= '<li class="">';

  			$string .= ' <a href="javascript:void(0);" tag="'. $country['countries_id'] .'" ctr="{\'change_to_country\':\''. zen_get_country_iso_code($country['countries_id']) .'\'}"><em class="flag '. zen_get_country_iso_code($country['countries_id']) .'"></em>'.$country['countries_name'].'</a></li>'."\n";
  		}
  	}
  	$string .= '</ul></li></ul>';
  	$string .= '</div>';
  	return $string;
  }
  /**
   *live chat two country select 
   */
  function zen_draw_countries_pull_down_add_tag_two($name='',$params= '',$default_country_id = 223){
  	$default_countries = array(
  			223 => 'United States',
			222 => 'United Kingdom',
  			38	=> 'Canada',
  			13	=> 'Australia',	
  			73	=> 'France',
			81  => 'Germany',
			195 => 'Spain',
  			150	=> 'Netherlands',
			99	=> 'India',
			30 => 'Brazil',
  			204	=> 'Switzerland',
  			105 => 'Italy',
  	);
  	$keys = array_keys($default_countries);
  	$string = '
  	          <div ctr="{area:country}" id="email_curCountry" class="btn-group curCountry">
  	          <input type="hidden" name="email_country" id="country"/>
  	          <span class="big_input country_01" >
  	          <div id="email_your_currency" class="yourCurrency"><em class="flag us"></em>United States<span class="caret"></span></div></span>
  	          <ul class="dropdown-menu form-horizontal pull-right" id="email_box4" style="display:none;">
  	          <li>
  	          <ul>
  	          ';
  	foreach ($default_countries as $i => $country){
  		$string .= '<li class="">';
  
  		$string .= '<a href="javascript:void(0);" tag="'. $i .'" ctr="{\'change_to_country\':\''. zen_get_country_iso_code($i) .'\'}"><em class="flag '. zen_get_country_iso_code($i) .'"></em>'.$country.'</a></li>'."\n";
  	}
  	$string .= '<li class="divider"></li>';
  	$countiries = zen_get_countries();
  	foreach ($countiries as $i => $country){
  		if (!in_array($country['countries_id'],$keys)){
  			$string .= '<li class="">';
  
  			$string .= ' <a href="javascript:void(0);" tag="'. $i .'" ctr="{\'change_to_country\':\''. zen_get_country_iso_code($i) .'\'}"><em class="flag '. zen_get_country_iso_code($i) .'"></em>'.$country['countries_name'].'</a></li>'."\n";
  		}
  	}
  	$string .= '</ul></li></ul>';
  	$string .= '</div>';
  	return $string;
  }
  
  function zen_draw_countries_pull_down_add_tag_shipping($name='',$params= '',$default_country_id = 223,$countries_name,$countries_code_2){
  
  
  	//default countries list
  	$default_countries = array(
  			223 => 'United States',
			222 => 'United Kingdom',
  			38	=> 'Canada',
  			13	=> 'Australia',	
  			73	=> 'France',
			81  => 'Germany',
			195 => 'Spain',
  			150	=> 'Netherlands',
			99	=> 'India',
			30 => 'Brazil',
  			204	=> 'Switzerland',
  			105 => 'Italy',
  	);
  
  	$keys = array_keys($default_countries);
  	$string = '
  	          <div ctr="{area:country}" id="curCountry1" class="btn-group curCountry">
  	          <input type="hidden" name="countries_iso_code_2" id="countries_iso_code_2"/>
  	          <span class="big_input country_01" >
  	          <div id="your_currency" class="yourCurrency"><em class="flag '.strtolower($countries_code_2).'"></em>'.$countries_name.'<span class="caret"></span></div></span>
  	          <ul class="dropdown-menu form-horizontal pull-right" id="box41" style="display:none;">
  	          <li>
  	          <ul>
  	          ';
  

  	foreach ($default_countries as $i => $country){
		if($i == '223'){
			$countries_iso_code_2 = 'US';
		}elseif($i == '38'){
			$countries_iso_code_2 = 'CA';
		}elseif($i == '13'){
			$countries_iso_code_2 = 'AU';
		}elseif($i == '222'){
			$countries_iso_code_2 = 'GB';
		}elseif($i == '150'){
			$countries_iso_code_2 = 'NL';
		}elseif($i == '204'){
			$countries_iso_code_2 = 'CH';
		}elseif($i == '105'){
			$countries_iso_code_2 = 'IT';
		}elseif($i == '99'){
			$countries_iso_code_2 = 'IN';
		}elseif($i == '73'){
			$countries_iso_code_2 = 'FR';
		}elseif($i == '30'){
			$countries_iso_code_2 = 'BR';
		}elseif($i == '81'){
			$countries_iso_code_2 = 'DE';
		}elseif($i == '195'){
			$countries_iso_code_2 = 'ES';
		}
  		$string .= '<li class="">';

  		$string .= '<a href="javascript:void(0);" tag="'. $countries_iso_code_2 .'" ctr="{\'change_to_country\':\''. zen_get_country_iso_code($i) .'\'}"><em class="flag '. zen_get_country_iso_code($i) .'"></em>'.$country.'</a></li>'."\n";
  	}
  	$string .= '<li class="divider"></li>';
  
  	//group 2
  	// 	iterate countries from db
  	$countiries = zen_get_countries();
  	//$string .= '<optgroup label="--------------------------">'."\n";
  	foreach ($countiries as $i => $country){
  		if (!in_array($country['countries_id'],$keys)){
  			$string .= '<li class="">';

  			$string .= ' <a href="javascript:void(0);" tag="'. $country['countries_iso_code_2'] .'" ctr="{\'change_to_country\':\''. zen_get_country_iso_code($country['countries_id']) .'\'}"><em class="flag '. zen_get_country_iso_code($country['countries_id']) .'"></em>'.$country['countries_name'].'</a></li>'."\n";
  		}
  	}
  	$string .= '</ul></li></ul>';
  	$string .= '</div>';
  	return $string;
  }
  
      //melo
    function zen_draw_countries_pull_down_select_country($name='',$params= '',$default_country_id = 223){

  	//default countries list
  	$default_countries = array(
  			223 => 'United States',
			222 => 'United Kingdom',
  			38	=> 'Canada',
  			13	=> 'Australia',	
  			73	=> 'France',
			81  => 'Germany',
			195 => 'Spain',
  			150	=> 'Netherlands',
			99	=> 'India',
			30 => 'Brazil',
  			204	=> 'Switzerland',
  			105 => 'Italy',
  	);
  
  	$keys = array_keys($default_countries);
  	$flag_name = $_SESSION['countries_iso_code'] ? strtolower($_SESSION['countries_iso_code']) : 'us';
  	if($flag_name == 'us'){
  	$countries_name = 'United States';
  	}else{
  	$countries_name = $_SESSION['ship_country'] ? zen_get_countries_name_of_id($_SESSION['ship_country']) : 'United States';
  	}
  	$string = '
  	          <div ctr="{area:country}" id="SelCountry" class="btn-group curCountry">
  	          <input type="hidden" name="countries_iso_code_2" id="countries_iso_code_2"/>
  	          <span class="big_input country_01" >
  	          <div id="Cus_country" class="yourCurrency"><em class="flag '.$flag_name.'"></em>'.$countries_name.'<span class="caret"></span></div></span>
  	          <ul class="dropdown-menu form-horizontal pull-right" id="Country_box" style="display:none;">
  	          <li>
  	          <ul>
  	          ';

  	foreach ($default_countries as $i => $country){
		if($i == '223'){
			$countries_iso_code_2 = 'US';
		}elseif($i == '38'){
			$countries_iso_code_2 = 'CA';
		}elseif($i == '13'){
			$countries_iso_code_2 = 'AU';
		}elseif($i == '222'){
			$countries_iso_code_2 = 'GB';
		}elseif($i == '150'){
			$countries_iso_code_2 = 'NL';
		}elseif($i == '204'){
			$countries_iso_code_2 = 'CH';
		}elseif($i == '105'){
			$countries_iso_code_2 = 'IT';
		}elseif($i == '99'){
			$countries_iso_code_2 = 'IN';
		}elseif($i == '73'){
			$countries_iso_code_2 = 'FR';
		}elseif($i == '30'){
			$countries_iso_code_2 = 'BR';
		}elseif($i == '81'){
			$countries_iso_code_2 = 'DE';
		}elseif($i == '195'){
			$countries_iso_code_2 = 'ES';
		}
  		$string .= '<li class="">';

  		$string .= '<a href="javascript:void(0);" tag="'. $countries_iso_code_2 .'" ctr="{\'change_to_country\':\''. zen_get_country_iso_code($i) .'\'}"><em class="flag '. zen_get_country_iso_code($i) .'"></em>'.$country.'</a></li>'."\n";
  	}
  	$string .= '<li class="divider"></li>';
  
  	//group 2
  	// 	iterate countries from db
  	$countiries = zen_get_countries();
  	//$string .= '<optgroup label="--------------------------">'."\n";
  	foreach ($countiries as $i => $country){
  		if (!in_array($country['countries_id'],$keys)){
  			$string .= '<li class="">';
  			$string .= ' <a href="javascript:void(0);" tag="'. $country['countries_iso_code_2'] .'" ctr="{\'change_to_country\':\''. zen_get_country_iso_code($country['countries_id']) .'\'}"><em class="flag '. zen_get_country_iso_code($country['countries_id']) .'"></em>'.$country['countries_name'].'</a></li>'."\n";
  		}
  	}
  	$string .= '</ul></li></ul>';
  	$string .= '</div>';
  	return $string;
  }


   function zen_draw_countries_pull_down_select_new_country($name='',$params= '',$default_country_id = 223,$countries_iso_code = 'us'){
    $countries_iso_code = strtolower($countries_iso_code);
    $countries_name = get_countries_iso_code_name(strtoupper($countries_iso_code));
  	//default countries list
  	$default_countries = array(
  			223 => 'United States',
			222 => 'United Kingdom',
  			38	=> 'Canada',
  			13	=> 'Australia',	
  			73	=> 'France',
			81  => 'Germany',
			195 => 'Spain',
  			150	=> 'Netherlands',
			99	=> 'India',
			30 => 'Brazil',
  			204	=> 'Switzerland',
  			105 => 'Italy',
  	);
  
  	$keys = array_keys($default_countries);
  	$string = '
  	          <div ctr="{area:country}" id="SelCountry" class="btn-group curCountry">
  	          <input type="hidden" name="countries_iso_code_2" id="countries_iso_code_2"/>
  	          <span class="big_input country_01" >
  	          <div id="Cus_country" class="yourCurrency"><em class="flag '.$countries_iso_code.'"></em>'.$countries_name.'<span class="caret"></span></div></span>
  	          <ul class="dropdown-menu form-horizontal pull-right" id="Country_box" style="display:none;">
  	          <li>
  	          <ul>
  	          ';

  	foreach ($default_countries as $i => $country){
		if($i == '223'){
			$countries_iso_code_2 = 'US';
		}elseif($i == '38'){
			$countries_iso_code_2 = 'CA';
		}elseif($i == '13'){
			$countries_iso_code_2 = 'AU';
		}elseif($i == '222'){
			$countries_iso_code_2 = 'GB';
		}elseif($i == '150'){
			$countries_iso_code_2 = 'NL';
		}elseif($i == '204'){
			$countries_iso_code_2 = 'CH';
		}elseif($i == '105'){
			$countries_iso_code_2 = 'IT';
		}elseif($i == '99'){
			$countries_iso_code_2 = 'IN';
		}elseif($i == '73'){
			$countries_iso_code_2 = 'FR';
		}elseif($i == '30'){
			$countries_iso_code_2 = 'BR';
		}elseif($i == '81'){
			$countries_iso_code_2 = 'DE';
		}elseif($i == '195'){
			$countries_iso_code_2 = 'ES';
		}
  		$string .= '<li class="">';

  		$string .= '<a href="javascript:void(0);" tag="'. $countries_iso_code_2 .'" ctr="{\'change_to_country\':\''. zen_get_country_iso_code($i) .'\'}"><em class="flag '. zen_get_country_iso_code($i) .'"></em>'.$country.'</a></li>'."\n";
  	}
  	$string .= '<li class="divider"></li>';
  
  	//group 2
  	// 	iterate countries from db
  	$countiries = zen_get_countries();
  	//$string .= '<optgroup label="--------------------------">'."\n";
  	foreach ($countiries as $i => $country){
  		if (!in_array($country['countries_id'],$keys)){
  			$string .= '<li class="">';
  			$string .= ' <a href="javascript:void(0);" tag="'. $country['countries_iso_code_2'] .'" ctr="{\'change_to_country\':\''. zen_get_country_iso_code($country['countries_id']) .'\'}"><em class="flag '. zen_get_country_iso_code($country['countries_id']) .'"></em>'.$country['countries_name'].'</a></li>'."\n";
  		}
  	}
  	$string .= '</ul></li></ul>';
  	$string .= '</div>';
  	return $string;
  }

  
    function zen_draw_countries_pull_down_add_tag_image($name='',$params= '',$default_country_id = 223){
  
  
  	//default countries list
  	$default_countries = array(
  			223 => 'United States',
			222 => 'United Kingdom',
  			38	=> 'Canada',
  			13	=> 'Australia',	
  			73	=> 'France',
			81  => 'Germany',
			195 => 'Spain',
  			150	=> 'Netherlands',
			99	=> 'India',
			30 => 'Brazil',
  			204	=> 'Switzerland',
  			105 => 'Italy',
  	);
  
  	$keys = array_keys($default_countries);
  	$string = '
  	          <div ctr="{area:country}" id="billingCountry" class="btn-group curCountry">
  	          <input type="hidden" name="tagcountry"  id="bicountry"/>
  	          <span class="big_input country_01" >
  	          <div id="tag_currency" class="yourCurrency"><em class="flag us"></em>United States<span class="caret"></span></div></span>
  	          <ul class="dropdown-menu form-horizontal pull-right" id="box44" style="display:none;">
  	          <li>
  	          <ul>
  	          ';
  

  	foreach ($default_countries as $i => $country){
  		$string .= '<li class="">';

  		$string .= '<a href="javascript:void(0);" tag="'. $i .'" ctr="{\'change_to_country\':\''. zen_get_country_iso_code($i) .'\'}"><em class="flag '. zen_get_country_iso_code($i) .'"></em>'.$country.'</a></li>'."\n";
  	}
  	$string .= '<li class="divider"></li>';
  
  	//group 2
  	// 	iterate countries from db
  	$countiries = zen_get_countries();
  	//$string .= '<optgroup label="--------------------------">'."\n";
  	
  	foreach ($countiries as $i => $country){
  		if (!in_array($country['countries_id'],$keys)){
  			$string .= '<li class="">';

  			$string .= ' <a href="javascript:void(0);" tag="'. $country['countries_id'] .'" ctr="{\'change_to_country\':\''. zen_get_country_iso_code($country['countries_id']) .'\'}"><em class="flag '. zen_get_country_iso_code($country['countries_id']) .'"></em>'.$country['countries_name'].'</a></li>'."\n";
  		}
  	}
  	$string .= '</ul></li></ul>';
  	$string .= '</div>';
  	return $string;
  }
  
  /**
   * ======================country name select   tom==================================
   */
   function zen_draw_countries_select_name($name='',$params= '',$default_country_id){
  	switch($_SESSION['languages_id']){
		case 2:
		
		$default_country_id =195;
		$default_countries = array(
  			195 => 'Spain',
			5 => 'Andorra',
  			10	=> 'Argentina',
  			95	=> 'Honduras',	
  			26	=> 'Bolivia',
			138  => 'Mexico',
			43 => 'Chile',
  			30	=> 'Brazil',
			47	=> 'Colombia',
			51 => 'Costa Rica',
  			54	=> 'Cuba',
  			59 => 'Dominica',
  	    );
		break;
		
		case 3:
		$default_country_id =73;
		$default_countries = array(
  			73 => 'France',
			21 => 'Belgium',
  			38	=> 'Canada',
  			204	=> 'Switzerland',	
  			124	=> 'Luxembourg',
			141  => 'Monaco',
  	    );
		break;
		
		case 4:
		$default_country_id =176;
		$default_countries = array(
  			176 => 'Russian Federation',
			220 => 'Ukraine',
  			20	=> 'Belarus',
  			109	=> 'Kazakhstan',	
  			115	=> 'Kyrgyzstan',
			226  => 'Uzbekistan',
			123 => 'Lithuania',
  			67	=> 'Estonia',
			17	=> 'Azerbaijan',
  	    );
		break;
		
		case 5:
		$default_country_id =81;
		$default_countries = array(
  			81 => 'Germany',
			14 => 'Austria',
  			204	=> 'Switzerland',
  			122	=> 'Liechtenstein',	
  	    );
		break;
		
		default :
		$default_country_id =223;
		$default_countries = array(
  			223 => 'United States',
			222 => 'United Kingdom',
  			38	=> 'Canada',
  			13	=> 'Australia',	
  			73	=> 'France',
			81  => 'Germany',
			195 => 'Spain',
  			150	=> 'Netherlands',
			99	=> 'India',
			30 => 'Brazil',
  			204	=> 'Switzerland',
  			105 => 'Italy',
  	    );
	}
	
  	$keys = array_keys($default_countries);
  	$string .= '<select '.$params.$params.'>';
  	
//  	foreach ($default_countries as $i => $country){
//  		$string .= '<li class="">';
//  		$string .= '<option value="'.$i.'">'.$country.'</option>';
//  		$string .= '</li>';
//  	}
  	foreach ($default_countries as $i => $country){
  		$string .= '<option value="'.$i.'" class="flag '.zen_get_country_iso_code($i).'">'.$country.'</option>';
  	}
  	$string .= '<option disabled>------------------------</option>';
  	$countiries = zen_get_countries();
  	foreach ($countiries as $i => $country){
//  		if (!in_array($country['countries_id'],$keys)){  /* class="flag '.zen_get_country_iso_code($i).'"*/
//  			$string .= '<li class="">';
//  			$string .= '<option value="'.$country['countries_id'].'" class="flag '.zen_get_country_iso_code($i).'">'.$country['countries_name'].'</option>';
//  			$string .= '</li>';
//  		}
  	if (!in_array($country['countries_id'],$keys)){  /* class="flag '.zen_get_country_iso_code($i).'"*/
  			$string .= '<option value="'.$country['countries_id'].'" class="flag '.zen_get_country_iso_code($country['countries_id']).'">'.$country['countries_name'].'</option>';
  		}
  	}
  	$string .= '</select>';
  	return $string;
  }
  
  /**
 	* *******$options = array("Peter"=>"35","Ben"=>"37","Joe"=>"43")
 	*/
  function zen_draw_select_key_value($name='',$params= '',$options,$default_option = '- Please select one -'){
  	$string .= '<select name='.$name.' '.$params.'>';
  	$string .= '<option value=""></option>';
  	foreach ($options as $key=>$option){
  		$string .= '<option value="'.$key.'">'.$option.'</option>';
  	}
  	$string .= '</select>';
  	return $string;
  }
  	/**
 	* *******$options = array("Peter","Ben","Joe")
 	*/
  function zen_draw_select_value($name='',$params= '',$options,$default_option = '- Please select one -'){
  	$string .= '<select name='.$name.' '.$params.'>';
  	$string .= '<option value=""></option>';
  	foreach ($options as $key=>$option){
  		$string .= '<option value="'.$option.'">'.$option.'</option>';
  	}
  	$string .= '</select>';
  	return $string;
  }
  
   /**
 	* *******$options = array("Peter","Ben","Joe")
 	*/
  function zen_draw_select_sort_by_value($name='',$params= '',$options,$current_category_id){
  	$string .= '<select name='.$name.' '.$params.'>';
  	$string .= '<option value=""></option>';
  	if (!isset($page_handler)) {
		$page_handler = FILENAME_DEFAULT;
	}
  	foreach ($options as $key=>$option){
  		$string .= '<option '.$str.' id="'.$key.'" value="'.$key.'" tag="'.zen_href_link($page_handler,'&cPath='.$current_category_id.'&sort_order='.$key.'&'.zen_get_all_get_params(array('cPath','sort_order')),'NONSSL').'">'.$option.'</option>';
  	}
  	$string .= '</select>';
  	return $string;
  }
  
function zen_draw_countries_for_tutorial($name='',$params= '',$default_country_id = 223,$countries_iso_code = 'us'){
	$countries_iso_code = strtolower($countries_iso_code);
    $countries_name = get_countries_iso_code_name(strtoupper($countries_iso_code));
  	//default countries list
  	$default_countries = array(
  			223 => 'United States',
			222 => 'United Kingdom',
  			38	=> 'Canada',
  			13	=> 'Australia',	
  			73	=> 'France',
			81  => 'Germany',
			195 => 'Spain',
  			150	=> 'Netherlands',
			99	=> 'India',
			30 => 'Brazil',
  			204	=> 'Switzerland',
  			105 => 'Italy',
  	);
  
  	$keys = array_keys($default_countries);
	$string = '<div class="choose_tutorial_country" '.$params.'>'.FS_TUTORIAL_COUNTRY.'
				<span class="tutorial_showMore"></span>
				<div class="tutorial_searchCountry">
				<input type="text" class="tutorial_search_input big_input"  />
				<p class="tutorial_text">'.FS_TUTORIAL_SEARCH.'</p>
				<ul class="tutorial_countryList">';
	foreach ($default_countries as $i => $country){
  		$string .= '<li class="">';

  		$string .= '<a href="javascript:void(0);" tag="'.$i.'" ><em class="flag '. zen_get_country_iso_code($i) .'"></em>'.$country.'</a></li>'."\n";
		
  	}
	$string .= '<li class="divider" style="height:0px"></li>';
	
	$countiries = zen_get_countries();
	foreach ($countiries as $i => $country){
  		if (!in_array($country['countries_id'],$keys)){
  			$string .= '<li class="">';
  			$string .= ' <a href="javascript:void(0);" tag="'. $country['countries_id'] .'"><em class="flag '. zen_get_country_iso_code($country['countries_id']) .'"></em>'.$country['countries_name'].'</a></li>'."\n";
  		}
  	}
	$string .= '</ul></div></div>';
	return $string;
}

  
//add by aron 7.17/


function zen_draw_countries_pull_down_add_tag_image_checkout($name='',$params= '',$default_country_id = 223){


  //default countries list
  $default_countries = array(
      223 => 'United States',
      222 => 'United Kingdom',
      38  => 'Canada',
      13  => 'Australia',
      73  => 'France',
      81  => 'Germany',
      195 => 'Spain',
      150 => 'Netherlands',
      99  => 'India',
      30 => 'Brazil',
      204 => 'Switzerland',
      105 => 'Italy',
  );

  $keys = array_keys($default_countries);
  $string = '
              <div ctr="{area:country}" id="billingCountry" class="btn-group curCountry">
              <input type="hidden" name='."$name".'  id="entry_country_id"/>
              <span class="big_input country_01" >
              <div id="tag_currency" class="yourCurrency"><em class="flag us"></em>United States<span class="caret"></span></div></span>
              <ul class="dropdown-menu form-horizontal pull-right" id="box44" style="display:none;">
              <li>
              <ul>
              ';


  foreach ($default_countries as $i => $country){
    $string .= '<li class="">';

    $string .= '<a href="javascript:void(0);" tag="'. $i .'" ctr="{\'change_to_country\':\''. zen_get_country_iso_code($i) .'\'}"><em class="flag '. zen_get_country_iso_code($i) .'"></em>'.$country.'</a></li>'."\n";
  }
  $string .= '<li class="divider"></li>';

  //group 2
  //  iterate countries from db
  $countiries = zen_get_countries();
  //$string .= '<optgroup label="--------------------------">'."\n";

  foreach ($countiries as $i => $country){
    if (!in_array($country['countries_id'],$keys)){
      $string .= '<li class="">';

      $string .= ' <a href="javascript:void(0);" tag="'. $country['countries_id'] .'" ctr="{\'change_to_country\':\''. zen_get_country_iso_code($country['countries_id']) .'\'}"><em class="flag '. zen_get_country_iso_code($country['countries_id']) .'"></em>'.$country['countries_name'].'</a></li>'."\n";
    }
  }
  $string .= '</ul></li></ul>';
  $string .= '</div>';
  return $string;
}





function zen_draw_countries_pull_down_add_tag_image_checkout_new($name='',$params= '',$default_country_id = 223){


  //default countries list
  $default_countries = array(
      223 => 'United States',
      222 => 'United Kingdom',
      38  => 'Canada',
      13  => 'Australia',
      73  => 'France',
      81  => 'Germany',
      195 => 'Spain',
      150 => 'Netherlands',
      99  => 'India',
      30 => 'Brazil',
      204 => 'Switzerland',
      105 => 'Italy',
  );

  $keys = array_keys($default_countries);
  $string = '
              <div ctr="{area:country}" id="billingCountry_new" class="btn-group curCountry">
              <input type="hidden" name='."$name".'  id="entry_country_id_new" value="223"/>
              <span class="big_input country_01" >
              <div id="tag_currency_new" class="yourCurrency"><em class="flag us"></em>United States<span class="caret"></span></div></span>
              <ul class="dropdown-menu form-horizontal pull-right" id="box44_new" style="display:none;">
              <li>
              <ul>
              ';


  foreach ($default_countries as $i => $country){
    $string .= '<li class="">';

    $string .= '<a href="javascript:void(0);" tag="'. $i .'" ctr="{\'change_to_country\':\''. zen_get_country_iso_code($i) .'\'}"><em class="flag '. zen_get_country_iso_code($i) .'"></em>'.$country.'</a></li>'."\n";
  }
  $string .= '<li class="divider"></li>';

  //group 2
  //  iterate countries from db
  $countiries = zen_get_countries();
  //$string .= '<optgroup label="--------------------------">'."\n";

  foreach ($countiries as $i => $country){
    if (!in_array($country['countries_id'],$keys)){
      $string .= '<li class="">';

      $string .= ' <a href="javascript:void(0);" tag="'. $country['countries_id'] .'" ctr="{\'change_to_country\':\''. zen_get_country_iso_code($country['countries_id']) .'\'}"><em class="flag '. zen_get_country_iso_code($country['countries_id']) .'"></em>'.$country['countries_name'].'</a></li>'."\n";
    }
  }
  $string .= '</ul></li></ul>';
  $string .= '</div>';
  return $string;
}
function zen_draw_countries_pull_down_add_tag_image_checkout_guest($name='',$params= '',$default_country_id = 223){


  //default countries list
  $default_countries = array(
      223 => 'United States',
      222 => 'United Kingdom',
      38  => 'Canada',
      13  => 'Australia',
      73  => 'France',
      81  => 'Germany',
      195 => 'Spain',
      150 => 'Netherlands',
      99  => 'India',
      30 => 'Brazil',
      204 => 'Switzerland',
      105 => 'Italy',
  );

  $keys = array_keys($default_countries);
  $string = '
              <div ctr="{area:country}" id="billingCountry_popup" class="btn-group curCountry">
              <input type="hidden" name='."$name".'  id="guest_conuntry_id" value='.$default_country_id.'/>
              <span class="big_input country_01" >
              <div id="tag_currency_popup" class="yourCurrency"><em class="flag us"></em>United States<span class="caret"></span></div></span>
              <ul class="dropdown-menu form-horizontal pull-right" id="box44_popup" style="display:none;">
              <li>
              <ul>
              ';


  foreach ($default_countries as $i => $country){
    $string .= '<li class="">';

    $string .= '<a href="javascript:void(0);" tag="'. $i .'" ctr="{\'change_to_country\':\''. zen_get_country_iso_code($i) .'\'}"><em class="flag '. zen_get_country_iso_code($i) .'"></em>'.$country.'</a></li>'."\n";
  }
  $string .= '<li class="divider"></li>';

  //group 2
  //  iterate countries from db
  $countiries = zen_get_countries();
  //$string .= '<optgroup label="--------------------------">'."\n";

  foreach ($countiries as $i => $country){
    if (!in_array($country['countries_id'],$keys)){
      $string .= '<li class="">';

      $string .= ' <a href="javascript:void(0);" tag="'. $country['countries_id'] .'" ctr="{\'change_to_country\':\''. zen_get_country_iso_code($country['countries_id']) .'\'}"><em class="flag '. zen_get_country_iso_code($country['countries_id']) .'"></em>'.$country['countries_name'].'</a></li>'."\n";
    }
  }
  $string .= '</ul></li></ul>';
  $string .= '</div>';
  return $string;
}

function zen_draw_countries_pull_down_add_tag_image_search($arr=array()){
  if(!empty($arr)){
    $default_country_code = isset($arr['default_country_code']) ? $arr['default_country_code'] : "us";
    $default_country_name = isset($arr['default_country_name']) ? $arr['default_country_name'] : "United States";
    $search_name = isset($arr['search_name']) ?  $arr['search_name']: "Search your country";
  }

  //default countries list
  $default_countries = array(
      223 => 'United States',
      222 => 'United Kingdom',
      38  => 'Canada',
      13  => 'Australia',
      73  => 'France',
      81  => 'Germany',
      195 => 'Spain',
      150 => 'Netherlands',
      99  => 'India',
      30 => 'Brazil',
      204 => 'Switzerland',
      105 => 'Italy',
  );

  $keys = array_keys($default_countries);
  $string = '<div class="choose_country">
                <em class="'.$default_country_code.'" style="left: 12px;"></em><p>'.$default_country_name.'</p>
                <span class="showMore"></span>
               <div class="searchCountry" style="display: none;">
                 <div class="search_block">
                      <p class="pc_prompt">'."$search_name ".'</p>
                      <input type="text" class="search_input">
                  </div>
                  <ul class="countryList">
              ';


  foreach ($default_countries as $i => $country){
    $string .= '<li class="">';

    $string .= '<a class="countryList_a" href="javascript:void(0);" tag="'. $i .'" ctr="{\'change_to_country\':\''. zen_get_country_iso_code($i) .'\'}"><em class="'. zen_get_country_iso_code($i) .'"></em>'.$country.'</a></li>'."\n";
  }
  //group 2
  //  iterate countries from db
  $countiries = zen_get_countries();
  //$string .= '<optgroup label="--------------------------">'."\n";

  foreach ($countiries as $i => $country){
    if (!in_array($country['countries_id'],$keys)){
      $string .= '<li class="">';

      $string .= ' <a class="countryList_a" href="javascript:void(0);" tag="'. $country['countries_id'] .'" ctr="{\'change_to_country\':\''. zen_get_country_iso_code($country['countries_id']) .'\'}"><em class="'. zen_get_country_iso_code($country['countries_id']) .'"></em>'.$country['countries_name'].'</a></li>'."\n";
    }
  }
  $string .= '</ul></div>';
              
  $string .= '</div>';
  return $string;
}
